import { Injectable } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { StudentGuideSection, StudentGuideContent, ContentSection, DepartmentInfo, ExamRule } from '../model/student-guide.model';

@Injectable({
  providedIn: 'root'
})
export class StudentGuideService {
  private currentSectionSubject = new BehaviorSubject<StudentGuideSection | null>(null);
  public currentSection$ = this.currentSectionSubject.asObservable();

  private studentGuideSections: StudentGuideSection[] = [
    {
      id: 'study-system',
      title: 'نظام الدراسة واللوائح',
      icon: 'pi pi-book',
      content: {
        title: 'نظام الدراسة واللوائح',
        description: 'لوائح أكاديمية شاملة وإرشادات نظام الدراسة للطلاب في كلية الألسن.',
        sections: [
          {
            subtitle: 'هيكل العام الدراسي',
            points: [
              'يبدأ العام الدراسي في السبت الثالث من سبتمبر ويستمر لمدة 30 أسبوعًا',
              'إجازة منتصف العام لمدة أسبوعين تحدد بقرار من مجلس الجامعة',
              'كل كلية تضع لوائحها الداخلية التي تحدد المواد الدراسية والساعات المعتمدة'
            ]
          },
          {
            subtitle: 'تسجيل الطلاب',
            points: [
              'يتم تسجيل الطلاب عند تقديم طلب قبل بدء الفصول الدراسية',
              'التسجيل المتأخر يتطلب موافقة مجلس الكلية',
              'يتم الاحتفاظ بملف الطالب يحتوي على جميع الوثائق الأكاديمية والإدارية'
            ]
          },
          {
            subtitle: 'المتطلبات الأكاديمية',
            points: [
              'الحضور والمشاركة في المحاضرات والجلسات العملية إلزامية',
              'يجوز لمجلس الكلية منع الطالب من حضور الامتحانات في حالة الحضور غير المرضي',
              'يتم توفير جميع التسهيلات بما في ذلك قاعات دراسية مزودة بسبورات ذكية وأجهزة عرض',
              'يتم منح الشهادات بعد استيفاء جميع المتطلبات الأكاديمية والمالية'
            ]
          }
        ]
      }
    },
    {
      id: 'student-services',
      title: 'خدمات الطلاب',
      icon: 'pi pi-users',
      content: {
        title: 'خدمات الطلاب',
        description: 'خدمات دعم شاملة متاحة لجميع الطلاب للتطوير الأكاديمي والشخصي.',
        sections: [
          {
            subtitle: 'خدمات الإسكان',
            points: [
              'السكن الطلابي يدار من قبل مجلس المدينة الجامعية',
              'اللوائح الداخلية تحدد شروط وإجراءات القبول',
              'رسوم سنوية رمزية للصيانة والأنشطة الرياضية وتجديد المعدات'
            ]
          },
          {
            subtitle: 'الخدمات الصحية',
            points: [
              'مكتب الشئون الطبية يوفر الرعاية الصحية من خلال المستشفيات الجامعية',
              'العلاج والدعم الطبي متاح لجميع الطلاب',
              'المساعدة الطبية الطارئة عند الحاجة'
            ]
          },
          {
            subtitle: 'خدمات المكتبة',
            points: [
              'مكتبة طلابية تحتوي على كتب ومراجع أساسية',
              'تدار وفقًا للوائح المكتبة الداخلية',
              'الوصول إلى الموارد الأكاديمية والمواد الدراسية'
            ]
          },
          {
            subtitle: 'صندوق التضامن الاجتماعي',
            points: [
              'يوفر الدعم الاجتماعي والمالي للطلاب',
              'يقدم المساعدات الطارئة والقروض',
              'يساعد الطلاب على التغلب على الصعوبات المالية لمواصلة الدراسة'
            ]
          }
        ]
      }
    },
    {
      id: 'discipline-system',
      title: 'نظام تأديب الطلاب',
      icon: 'pi pi-shield',
      content: {
        title: 'نظام تأديب الطلاب',
        description: 'إرشادات ولوائح للحفاظ على النزاهة الأكاديمية والسلوك السليم.',
        sections: [
          {
            subtitle: 'المخالفات التأديبية',
            points: [
              'تعطيل نظام الكلية أو الترويج لتعطيل الفصول الدراسية',
              'الغش أو محاولة الغش في الامتحانات',
              'إتلاف ممتلكات الجامعة أو موادها',
              'الانخراط في سلوك غير أخلاقي أو غير لائق',
              'توزيع مواد بدون إذن رسمي',
              'المشاركة في مظاهرات غير مصرح بها'
            ]
          },
          {
            subtitle: 'العقوبات التأديبية',
            points: [
              'تحذير شفهي أو كتابي',
              'الحرمان من الخدمات الطلابية',
              'التعليق من الفصول الدراسية أو الامتحانات',
              'الطرد من الكلية أو الجامعة (مؤقت أو دائم)'
            ]
          },
          {
            subtitle: 'الإجراءات القانونية',
            points: [
              'لا يتم اتخاذ أي إجراء تأديبي بدون تحقيق رسمي وجلسة استماع',
              'للطلاب الحق في استئناف القرارات خلال 15 يومًا',
              'تُقدم الاستئنافات إلى رئيس الجامعة',
              'إجراءات تأديبية عادلة وشفافة'
            ]
          }
        ]
      }
    },
    {
      id: 'department-coordination',
      title: 'التنسيق الداخلي للأقسام',
      icon: 'pi pi-sitemap',
      content: {
        title: 'التنسيق الداخلي للأقسام',
        description: 'معايير قبول الأقسام وإجراءات التنسيق لتنظيم العام الدراسي.',
        sections: [
          {
            subtitle: 'معايير القبول (العام الدراسي 2019/2020)',
            points: [
              'تفضيل الطالب في الترتيب',
              'الدرجة في مادة اللغة المرتبطة من الثانوية العامة',
              'المجموع الكلي لثلاث مواد لغوية (العربية، الإنجليزية، اللغة الأجنبية الثانية)',
              'يُعطى الأولوية للطلاب الذين درسوا اللغة الأجنبية في الثانوية العامة'
            ]
          },
          {
            subtitle: 'عملية تخصيص الأقسام',
            points: [
              'يملأ الطلاب استمارات التفضيل بترتيب الأقسام',
              'التخصيص بناءً على التفضيل والمجموع الكلي',
              'عملية اختيار عادلة وشفافة',
              'التخصيص بناءً على الجدارة الأكاديمية'
            ]
          },
          {
            subtitle: 'الأقسام المتاحة',
            points: [
              'قسم اللغة العربية',
              'قسم اللغة الإنجليزية',
              'قسم اللغة الفرنسية',
              'قسم اللغة الألمانية',
              'قسم اللغة الإيطالية',
              'قسم اللغة الروسية',
              'قسم اللغة الصينية',
              'قسم اللغة الإسبانية'
            ]
          }
        ]
      }
    },
    {
      id: 'exam-guidelines',
      title: 'إرشادات الامتحانات',
      icon: 'pi pi-file-edit',
      content: {
        title: 'إرشادات الامتحانات',
        description: 'قواعد وإجراءات الامتحانات الشاملة وفقًا للمادة 125 من قانون تنظيم الجامعات.',
        sections: [
          {
            subtitle: 'سياسة الغش',
            points: [
              'يتم طرد أي طالب يُضبط يغش من قاعة الامتحان',
              'يُعتبر الطالب راسبًا في جميع المواد لهذا الفصل',
              'يتم إحالة الحالة إلى مجلس التأديب',
              'سياسة عدم التسامح مع الخداع الأكاديمي'
            ]
          },
          {
            subtitle: 'قواعد قاعة الامتحان',
            points: [
              'يجب على الطلاب الوصول مبكرًا؛ لا يُسمح بالدخول المتأخر',
              'الهواتف المحمولة ممنوعة تمامًا',
              'يجب تقديم بطاقة الجامعة أو البطاقة الوطنية',
              'يجب على الطلاب الجلوس في المقاعد المخصصة وفقًا لأرقام المقاعد',
              'يجب توقيع ورقة الحضور خلال كل امتحان'
            ]
          },
          {
            subtitle: 'العناصر والسلوكيات المحظورة',
            points: [
              'لا يُسمح بإحضار كتب أو ملاحظات أو حقائب داخل القاعة',
              'لا يُسمح بالكتابة على الجدران أو المكاتب أو الأوراق غير المصرح بها',
              'لا يمكن للطلاب المغادرة قبل مرور نصف وقت الامتحان',
              'يُمنع كتابة تعليقات غير متعلقة في أوراق الإجابة',
              'أي انتهاك قد يؤدي إلى اتخاذ إجراء تأديبي'
            ]
          },
          {
            subtitle: 'إرشادات المراقبين',
            points: [
              'يجب الحفاظ على الهدوء والنظام خلال الامتحانات',
              'يُمنع استخدام الهواتف المحمولة من قبل المراقبين',
              'ضمان بيئة امتحان عادلة وآمنة',
              'الإبلاغ عن أي انتهاكات فورًا'
            ]
          }
        ]
      }
    }
  ];

  constructor() {
    // Set the first section as default
    this.currentSectionSubject.next(this.studentGuideSections[0]);
  }

  getAllSections(): StudentGuideSection[] {
    return this.studentGuideSections;
  }

  getCurrentSection(): Observable<StudentGuideSection | null> {
    return this.currentSection$;
  }

  setCurrentSection(sectionId: string): void {
    const section = this.studentGuideSections.find(s => s.id === sectionId);
    if (section) {
      this.currentSectionSubject.next(section);
    }
  }

  getSectionById(id: string): StudentGuideSection | undefined {
    return this.studentGuideSections.find(section => section.id === id);
  }
}